{
    "types": [
        {
            "name": "defaultChecked",
            "isOptional": true,
            "type": "boolean",
            "parentName": "Props"
        },
        {
            "name": "defaultValue",
            "isOptional": true,
            "type": "string | number | string[]",
            "parentName": "Props"
        },
        {
            "name": "suppressContentEditableWarning",
            "isOptional": true,
            "type": "boolean",
            "parentName": "Props"
        },
        {
            "name": "suppressHydrationWarning",
            "isOptional": true,
            "type": "boolean",
            "parentName": "Props"
        },
        {
            "name": "accessKey",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "className",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "contentEditable",
            "isOptional": true,
            "type": "boolean | \"true\" | \"false\" | \"inherit\"",
            "parentName": "Props"
        },
        {
            "name": "contextMenu",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "dir",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "draggable",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "hidden",
            "isOptional": true,
            "type": "boolean",
            "parentName": "Props"
        },
        {
            "name": "id",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "lang",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "placeholder",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "slot",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "spellCheck",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "style",
            "isOptional": true,
            "type": "CSSProperties",
            "parentName": "Props"
        },
        {
            "name": "tabIndex",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "title",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "translate",
            "isOptional": true,
            "type": "\"yes\" | \"no\"",
            "parentName": "Props"
        },
        {
            "name": "radioGroup",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "role",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "about",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "datatype",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "inlist",
            "isOptional": true,
            "type": "any",
            "parentName": "Props"
        },
        {
            "name": "prefix",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "property",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "resource",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "typeof",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "vocab",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "autoCapitalize",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "autoCorrect",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "autoSave",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "color",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "itemProp",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "itemScope",
            "isOptional": true,
            "type": "boolean",
            "parentName": "Props"
        },
        {
            "name": "itemType",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "itemID",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "itemRef",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "results",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "security",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "unselectable",
            "isOptional": true,
            "type": "\"on\" | \"off\"",
            "parentName": "Props"
        },
        {
            "name": "inputMode",
            "isOptional": true,
            "type": "\"none\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | \"search\"",
            "parentName": "Props"
        },
        {
            "name": "is",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-activedescendant",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-atomic",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "aria-autocomplete",
            "isOptional": true,
            "type": "\"none\" | \"inline\" | \"list\" | \"both\"",
            "parentName": "Props"
        },
        {
            "name": "aria-busy",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "aria-checked",
            "isOptional": true,
            "type": "boolean | \"true\" | \"false\" | \"mixed\"",
            "parentName": "Props"
        },
        {
            "name": "aria-colcount",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "aria-colindex",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "aria-colspan",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "aria-controls",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-current",
            "isOptional": true,
            "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
            "parentName": "Props"
        },
        {
            "name": "aria-describedby",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-details",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-disabled",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "aria-dropeffect",
            "isOptional": true,
            "type": "\"none\" | \"copy\" | \"execute\" | \"link\" | \"move\" | \"popup\"",
            "parentName": "Props"
        },
        {
            "name": "aria-errormessage",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-expanded",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "aria-flowto",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-grabbed",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "aria-haspopup",
            "isOptional": true,
            "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
            "parentName": "Props"
        },
        {
            "name": "aria-hidden",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "aria-invalid",
            "isOptional": true,
            "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
            "parentName": "Props"
        },
        {
            "name": "aria-keyshortcuts",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-label",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-labelledby",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-level",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "aria-live",
            "isOptional": true,
            "type": "\"off\" | \"assertive\" | \"polite\"",
            "parentName": "Props"
        },
        {
            "name": "aria-modal",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "aria-multiline",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "aria-multiselectable",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "aria-orientation",
            "isOptional": true,
            "type": "\"horizontal\" | \"vertical\"",
            "parentName": "Props"
        },
        {
            "name": "aria-owns",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-placeholder",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-posinset",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "aria-pressed",
            "isOptional": true,
            "type": "boolean | \"true\" | \"false\" | \"mixed\"",
            "parentName": "Props"
        },
        {
            "name": "aria-readonly",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "aria-relevant",
            "isOptional": true,
            "type": "\"text\" | \"additions\" | \"additions text\" | \"all\" | \"removals\"",
            "parentName": "Props"
        },
        {
            "name": "aria-required",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "aria-roledescription",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "aria-rowcount",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "aria-rowindex",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "aria-rowspan",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "aria-selected",
            "isOptional": true,
            "type": "Booleanish",
            "parentName": "Props"
        },
        {
            "name": "aria-setsize",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "aria-sort",
            "isOptional": true,
            "type": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
            "parentName": "Props"
        },
        {
            "name": "aria-valuemax",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "aria-valuemin",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "aria-valuenow",
            "isOptional": true,
            "type": "number",
            "parentName": "Props"
        },
        {
            "name": "aria-valuetext",
            "isOptional": true,
            "type": "string",
            "parentName": "Props"
        },
        {
            "name": "children",
            "isOptional": true,
            "type": "any",
            "parentName": "Props"
        },
        {
            "name": "dangerouslySetInnerHTML",
            "isOptional": true,
            "type": "{ __html: string; }",
            "parentName": "Props"
        },
        {
            "name": "onCopy",
            "isOptional": true,
            "type": "(event: ClipboardEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCopyCapture",
            "isOptional": true,
            "type": "(event: ClipboardEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCut",
            "isOptional": true,
            "type": "(event: ClipboardEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCutCapture",
            "isOptional": true,
            "type": "(event: ClipboardEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPaste",
            "isOptional": true,
            "type": "(event: ClipboardEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPasteCapture",
            "isOptional": true,
            "type": "(event: ClipboardEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCompositionEnd",
            "isOptional": true,
            "type": "(event: CompositionEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCompositionEndCapture",
            "isOptional": true,
            "type": "(event: CompositionEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCompositionStart",
            "isOptional": true,
            "type": "(event: CompositionEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCompositionStartCapture",
            "isOptional": true,
            "type": "(event: CompositionEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCompositionUpdate",
            "isOptional": true,
            "type": "(event: CompositionEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCompositionUpdateCapture",
            "isOptional": true,
            "type": "(event: CompositionEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onFocus",
            "isOptional": true,
            "type": "(event: FocusEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onFocusCapture",
            "isOptional": true,
            "type": "(event: FocusEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onBlur",
            "isOptional": true,
            "type": "(event: FocusEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onBlurCapture",
            "isOptional": true,
            "type": "(event: FocusEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onChange",
            "isOptional": true,
            "type": "(event: FormEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onChangeCapture",
            "isOptional": true,
            "type": "(event: FormEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onBeforeInput",
            "isOptional": true,
            "type": "(event: FormEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onBeforeInputCapture",
            "isOptional": true,
            "type": "(event: FormEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onInput",
            "isOptional": true,
            "type": "(event: FormEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onInputCapture",
            "isOptional": true,
            "type": "(event: FormEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onReset",
            "isOptional": true,
            "type": "(event: FormEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onResetCapture",
            "isOptional": true,
            "type": "(event: FormEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onSubmit",
            "isOptional": true,
            "type": "(event: FormEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onSubmitCapture",
            "isOptional": true,
            "type": "(event: FormEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onInvalid",
            "isOptional": true,
            "type": "(event: FormEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onInvalidCapture",
            "isOptional": true,
            "type": "(event: FormEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onLoad",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onLoadCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onError",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onErrorCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onKeyDown",
            "isOptional": true,
            "type": "(event: KeyboardEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onKeyDownCapture",
            "isOptional": true,
            "type": "(event: KeyboardEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onKeyPress",
            "isOptional": true,
            "type": "(event: KeyboardEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onKeyPressCapture",
            "isOptional": true,
            "type": "(event: KeyboardEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onKeyUp",
            "isOptional": true,
            "type": "(event: KeyboardEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onKeyUpCapture",
            "isOptional": true,
            "type": "(event: KeyboardEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onAbort",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onAbortCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCanPlay",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCanPlayCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCanPlayThrough",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onCanPlayThroughCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDurationChange",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDurationChangeCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onEmptied",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onEmptiedCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onEncrypted",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onEncryptedCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onEnded",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onEndedCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onLoadedData",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onLoadedDataCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onLoadedMetadata",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onLoadedMetadataCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onLoadStart",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onLoadStartCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPause",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPauseCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPlay",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPlayCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPlaying",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPlayingCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onProgress",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onProgressCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onRateChange",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onRateChangeCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onSeeked",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onSeekedCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onSeeking",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onSeekingCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onStalled",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onStalledCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onSuspend",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onSuspendCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onTimeUpdate",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onTimeUpdateCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onVolumeChange",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onVolumeChangeCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onWaiting",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onWaitingCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onAuxClick",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onAuxClickCapture",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onClick",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onClickCapture",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onContextMenu",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onContextMenuCapture",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDoubleClick",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDoubleClickCapture",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDrag",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragCapture",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragEnd",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragEndCapture",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragEnter",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragEnterCapture",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragExit",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragExitCapture",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragLeave",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragLeaveCapture",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragOver",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragOverCapture",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragStart",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDragStartCapture",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDrop",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onDropCapture",
            "isOptional": true,
            "type": "(event: DragEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onMouseDown",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onMouseDownCapture",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onMouseEnter",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onMouseLeave",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onMouseMove",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onMouseMoveCapture",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onMouseOut",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onMouseOutCapture",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onMouseOver",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onMouseOverCapture",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onMouseUp",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onMouseUpCapture",
            "isOptional": true,
            "type": "(event: MouseEvent<HTMLDivElement, MouseEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onSelect",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onSelectCapture",
            "isOptional": true,
            "type": "(event: SyntheticEvent<HTMLDivElement, Event>) => void",
            "parentName": "Props"
        },
        {
            "name": "onTouchCancel",
            "isOptional": true,
            "type": "(event: TouchEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onTouchCancelCapture",
            "isOptional": true,
            "type": "(event: TouchEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onTouchEnd",
            "isOptional": true,
            "type": "(event: TouchEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onTouchEndCapture",
            "isOptional": true,
            "type": "(event: TouchEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onTouchMove",
            "isOptional": true,
            "type": "(event: TouchEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onTouchMoveCapture",
            "isOptional": true,
            "type": "(event: TouchEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onTouchStart",
            "isOptional": true,
            "type": "(event: TouchEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onTouchStartCapture",
            "isOptional": true,
            "type": "(event: TouchEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerDown",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerDownCapture",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerMove",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerMoveCapture",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerUp",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerUpCapture",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerCancel",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerCancelCapture",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerEnter",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerEnterCapture",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerLeave",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerLeaveCapture",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerOver",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerOverCapture",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerOut",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onPointerOutCapture",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onGotPointerCapture",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onGotPointerCaptureCapture",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onLostPointerCapture",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onLostPointerCaptureCapture",
            "isOptional": true,
            "type": "(event: PointerEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onScroll",
            "isOptional": true,
            "type": "(event: UIEvent<HTMLDivElement, UIEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onScrollCapture",
            "isOptional": true,
            "type": "(event: UIEvent<HTMLDivElement, UIEvent>) => void",
            "parentName": "Props"
        },
        {
            "name": "onWheel",
            "isOptional": true,
            "type": "(event: WheelEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onWheelCapture",
            "isOptional": true,
            "type": "(event: WheelEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onAnimationStart",
            "isOptional": true,
            "type": "(event: AnimationEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onAnimationStartCapture",
            "isOptional": true,
            "type": "(event: AnimationEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onAnimationEnd",
            "isOptional": true,
            "type": "(event: AnimationEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onAnimationEndCapture",
            "isOptional": true,
            "type": "(event: AnimationEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onAnimationIteration",
            "isOptional": true,
            "type": "(event: AnimationEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onAnimationIterationCapture",
            "isOptional": true,
            "type": "(event: AnimationEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onTransitionEnd",
            "isOptional": true,
            "type": "(event: TransitionEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        },
        {
            "name": "onTransitionEndCapture",
            "isOptional": true,
            "type": "(event: TransitionEvent<HTMLDivElement>) => void",
            "parentName": "Props"
        }
    ],
    "name": "DisclosurePanel",
    "time": "2020-05-28T19:14:07.964Z",
    "version": "1.1.13"
}